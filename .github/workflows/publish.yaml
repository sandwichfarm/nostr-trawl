name: GH Release and NPM Publish
on:
  workflow_dispatch: 
  push:
    branches:
      - 'main'

jobs:
  publish:  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Package
        id: install_package
        run: |
          yarn install


      - name: Publish Package
        id: publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: '.'
          strategy: all
          access: public

      - name: Set Meta
        id: meta
        run: |
          RELEASE_SLUG="v${{ steps.publish.outputs.version }}"
          echo "release_slug=$RELEASE_SLUG" >> "$GITHUB_OUTPUT"

      - name: Check for Tag
        id: slug_exists
        run: |
          git fetch --tags
          TAG="${{ steps.meta.outputs.release_slug}}"
          if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
            echo "release_slug_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "release_slug_exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Archive
        if: steps.slug_exists.outputs.release_slug_exists != 'true'
        id: archive
        run: |
          zip -r "${{ steps.meta.outputs.release_slug}}.zip" ./

      - name: Create Release ${{ steps.meta.outputs.release_slug }}
        if: steps.publish.outputs.type != 'none' && steps.publish.outputs.dry_run != 'true' && steps.slug_exists.outputs.release_slug_exists != 'true'
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.meta.outputs.release_slug }}
          release_name: ${{ steps.meta.outputs.release_slug }}
          body: ""
          draft: false
          prerelease: true

      - name: Upload Release Asset ${{ steps.meta.outputs.release_slug }}.zip
        if: steps.slug_exists.outputs.release_slug_exists != 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.meta.outputs.release_slug}}.zip
          asset_name: ${{ steps.meta.outputs.release_slug}}.zip
          asset_content_type: application/zip